<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>John-Ferratt</title>
    <link>/</link>
    <description>Recent content on John-Ferratt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 14 May 2020 03:08:05 -0500</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python and R</title>
      <link>/blog/python-and-r/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/python-and-r/</guid>
      <description>Python and R R is a very handy programming language for analyzing datasets, manipulating data and creating effective plots to illustrate relationships between variables whereas Python which can do similar things is very slick in its ability to create functions and its easily readable code and simplicity. Below, I’ve taken the heart dataset in python and using the Reticulate library, I’ve been able to use that dataset in R. This allowed me to run a logistic regression on the data, and using LASSO, I’ve selected the variables that have a significant effect on whether or not a patient was predicted to have heart disease (For more information, see the Modeling project under the Projects Tab) to obtain an ROC plot of which I used to calculate the Area-under-the-curve (AUC).</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>/projects/</link>
      <pubDate>Thu, 14 May 2020 03:08:05 -0500</pubDate>
      
      <guid>/projects/</guid>
      <description>Projects Here are some projects I have recently completed:
  Exploratory Data Analysis with Tidyverse Tools
  Modeling, Testing, and Classification
  </description>
    </item>
    
    <item>
      <title>Project 1: Exploratory Data Analysis and Tidyverse Tools</title>
      <link>/project1/</link>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/project1/</guid>
      <description># Calling Libraries library(&amp;quot;ggplot2&amp;quot;) library(&amp;quot;dplyr&amp;quot;) library(&amp;quot;tidyverse&amp;quot;) library(&amp;quot;GGally&amp;quot;) library(&amp;quot;cluster&amp;quot;) library(&amp;quot;plotly&amp;quot;) library(&amp;quot;factoextra&amp;quot;) # Importing Datasets COVID19 &amp;lt;- read.csv(&amp;quot;Covid19_2.csv&amp;quot;) SARS &amp;lt;- read.csv(&amp;quot;sars_2003_complete_dataset_clean2.csv&amp;quot;) # Show introductory information regarding the two datasets glimpse(COVID19) ## Observations: 29,040 ## Variables: 9 ## $ Province.State &amp;lt;fct&amp;gt; , , , , , , , , Australian Capital Territory, New Sout… ## $ Country.Region &amp;lt;fct&amp;gt; Afghanistan, Albania, Algeria, Andorra, Angola, Antigu… ## $ Latitude &amp;lt;dbl&amp;gt; 33.0000, 41.1533, 28.0339, 42.5063, -11.</description>
    </item>
    
    <item>
      <title>Project 2: Modeling, Testing, and Classification</title>
      <link>/project2/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/project2/</guid>
      <description># Calling necessary Libraries library(&amp;quot;tidyverse&amp;quot;) library(&amp;quot;dplyr&amp;quot;) library(&amp;quot;ggplot2&amp;quot;) library(&amp;quot;plotROC&amp;quot;) # Import Dataset heart &amp;lt;- read.csv(&amp;quot;heart.csv&amp;quot;) glimpse(heart) ## Observations: 303 ## Variables: 14 ## $ age &amp;lt;int&amp;gt; 63, 37, 41, 56, 57, 57, 56, 44, 52, 57, 54, 48, 49, 64, 58, 50, 58, 66, 43, 69, … ## $ sex &amp;lt;int&amp;gt; 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1,… ## $ cp &amp;lt;int&amp;gt; 3, 2, 1, 1, 0, 0, 1, 1, 2, 2, 0, 2, 1, 3, 3, 2, 2, 3, 0, 3, 0, 2, 0, 2, 3, 1, 2,… ## $ trestbps &amp;lt;int&amp;gt; 145, 130, 130, 120, 120, 140, 140, 120, 172, 150, 140, 130, 130, 110, 150, 120, … ## $ chol &amp;lt;int&amp;gt; 233, 250, 204, 236, 354, 192, 294, 263, 199, 168, 239, 275, 266, 211, 283, 219, … ## $ fbs &amp;lt;int&amp;gt; 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,… ## $ restecg &amp;lt;int&amp;gt; 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… ## $ thalach &amp;lt;int&amp;gt; 150, 187, 172, 178, 163, 148, 153, 173, 162, 174, 160, 139, 171, 144, 162, 158, … ## $ exang &amp;lt;int&amp;gt; 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0,… ## $ oldpeak &amp;lt;dbl&amp;gt; 2.</description>
    </item>
    
  </channel>
</rss>